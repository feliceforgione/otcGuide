// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model disease_class {
  id                 Int                @id @default(autoincrement())
  name               String             @unique @db.VarChar(255)
  aliasname          String?            @db.VarChar(100)
  description        String?            @db.VarChar(255)
  buttonimage        String?            @db.VarChar(255)
  order              Int?               @db.TinyInt
  show               Boolean            @default(false)
  disable            Boolean            @default(false)
  disease_subclasses disease_subclass[]
}

model disease_subclass {
  disease_subclass_id          Int     @id @default(autoincrement())
  disease_subclass_name        String  @db.VarChar(255)
  disease_subclass_synonyms    String? @db.VarChar(255)
  disease_subclass_description String? @db.MediumText
  disease_subclass_order       Int?    @db.TinyInt
  disease_subclass_disable     Boolean @default(false)
  disease_subclass_overview    String? @db.MediumText
  nonpharm                     String? @db.MediumText

  disease_class_id Int           
  disease_class    disease_class @relation(fields: [disease_class_id], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
